query getProjectById($id: ID!) {
  getProject(id: $id) {
    name
    description
    creator {
      username
      id
    }
    participants {
      username
    }
    languages
    images {
      url
      id
      description
      priority
      createdAt
    }
    location {
      name
    }
    saved
    tags
  }
}
query getSavedProjects {
  savedProjects {
    id
    name
    description
    languages
    createdAt
    location {
      name
    }
    saved
  }
}

mutation saveProject($projectId: ID!) {
  addSavedProject(id: $projectId)
}

mutation unsaveProject($projectId: ID!) {
  removeSavedProject(id: $projectId)
}
query searchProjects(
  $searchString: String!
  $offset: Int! = 0
  $limit: Int! = 20
  $options: SearchOptions = {}
) {
  searchProjects(
    searchString: $searchString
    offset: $offset
    countLimit: $limit
    options: $options
  ) {
    saved
    id
    name
    description
    languages
    createdAt
    location {
      name
    }
  }
}

mutation updateProjectName($projectId: ID!, $newName: String!) {
  projectMutation(id: $projectId) {
    updateName(newName: $newName)
  }
}

mutation updateProjectDescription($projectId: ID!, $newDescription: String!) {
  projectMutation(id: $projectId) {
    updateDescription(newDescription: $newDescription)
  }
}
mutation updateProjectLocation($projectId: ID!, $newLocation: LocationInput!) {
  projectMutation(id: $projectId) {
    updateLocation(newLocation: $newLocation)
  }
}
mutation deleteProject($projectId: ID!) {
  projectMutation(id: $projectId) {
    deleteProject
  }
}
mutation addImage($projectId: ID!, $newImage: NewImageInput!) {
  projectMutation(id: $projectId) {
    addImage(newImage: $newImage)
  }
}
mutation removeImage($projectId: ID!, $imageId: ID!) {
  projectMutation(id: $projectId) {
    removeImage(id: $imageId)
  }
}
mutation updateImageDescription(
  $projectId: ID!
  $imageId: ID!
  $newDescription: String!
) {
  projectMutation(id: $projectId) {
    updateImageDescription(id: $imageId, newDescription: $newDescription)
  }
}

query getChatWithUserAsProject(
  $projectId: ID!
  $userId: ID!
  $until: Time
  $count: Int!
) {
  getProject(id: $projectId) {
    getChatByUserId(withUserId: $userId) {
      ...allMetadata
      messages(until: $until, count: $count) {
        author
        content
        time
      }
    }
  }
}

query availableTags($limit: Int! = 4, $offset: Int! = 0) {
  availableTags(limit: $limit, offset: $offset) {
    name
    count
  }
}

mutation addProjectTag($projectId: ID!, $tag: String!) {
  projectMutation(id: $projectId) {
    addTag(tag: $tag)
  }
}

mutation removeProjectTag($projectId: ID!, $tag: String!) {
  projectMutation(id: $projectId) {
    removeTag(tag: $tag)
  }
}
