query getMe {
  me {
    email
    username
    name
    id
    description
    createdProjects {
      name
      description
      id
    }
  }
}
query getMeWithoutLoginPrompt {
  meIfLoggedIn {
    email
    username
    id
  }
}
mutation createProject($newProject: NewProjectInput!) {
  createProject(project: $newProject) {
    id
  }
}
fragment all on ChatParticipant {
  user {
    id
    username
    name
  }
  project {
    id
    name
  }
}

fragment allMetadata on Chat {
  me
  p1 {
    ...all
  }
  p2 {
    ...all
  }
}
query myChats {
  chats {
    ...allMetadata
    messages(count: 1) {
      author
      content
      time
    }
  }
}

mutation writeMessageToUserId($userId: ID!, $message: String!) {
  writeMessageToUser(userId: $userId, content: $message)
}

mutation writeMessageToProjectId($projectId: ID!, $message: String!) {
  writeMessageToProject(projectId: $projectId, content: $message)
}

mutation writeProjectMessageToUserId(
  $projectId: ID!
  $userId: ID!
  $message: String!
) {
  projectMutation(id: $projectId) {
    writeMessageToUser(userId: $userId, content: $message)
  }
}

query getUserIdByUsername($username: String!) {
  getUserByUsername(username: $username) {
    id
    username
    name
  }
}
query getChatWithUserId($userId: ID!, $until: Time, $count: Int!) {
  getChatByUserId(withUserId: $userId) {
    messages(until: $until, count: $count) {
      author
      content
      time
    }
    ...allMetadata
  }
}
query getChatWithProjectId($projectId: ID!, $until: Time, $count: Int!) {
  getChatByProjectId(withProjectId: $projectId) {
    messages(until: $until, count: $count) {
      author
      content
      time
    }
    ...allMetadata
  }
}

mutation setMyUsername($username: String!) {
  setMyUsername(username: $username)
}

mutation setMyDescription($description: String!) {
  setMyDescription(description: $description)
}
